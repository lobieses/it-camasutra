{"version":3,"sources":["reportWebVitals.js","components/header/header.jsx","api/security-api.ts","api/auth-api.ts","Redux/auth-reducer.ts","components/header/headerContainer.jsx","components/side-bar/side-bar.jsx","assets/images/facebook.svg","assets/images/github.svg","assets/images/instagram.svg","assets/images/twitter.svg","assets/images/vk.svg","assets/images/website.svg","assets/images/youtube.svg","assets/images/mainLink.svg","components/content/Profile/ProfileInfo/ProfileData/Contacts/Contacts.jsx","components/content/Profile/ProfileInfo/ProfileData/ProfileData.jsx","components/content/Profile/ProfileInfo/ProfileInfo.jsx","components/content/Profile/ProfileDataForm/ChangePhoto/ChangePhoto.jsx","components/content/Profile/ProfileDataForm/ChangeProfileInfo.jsx","components/content/Profile/Profile.jsx","api/profile-api.ts","Redux/profile-reducer.ts","hoc/withAuthRedirect.js","components/content/Profile/ProfileContainer.jsx","components/content/Login/Login.jsx","Redux/app-reducer.ts","Redux/store.ts","hoc/withSuspense.js","App.js","index.js","components/common/FormControls/FormControls.js","components/side-bar/side-bar.module.css","components/content/Login/Login.module.css","components/content/Profile/ProfileInfo/ProfileInfo.module.css","assets/images/preloader.svg","components/common/Preloader/preloader.jsx","components/content/Profile/ProfileInfo/ProfileData/ProfileData.module.css","components/common/FormControls/FormControls.module.css","components/header/header.module.css","assets/images/defaultPhoto.svg","components/common/Preloader/preloader.module.css","components/content/Profile/ProfileInfo/ProfileData/Contacts/Contact.module.css","utils/validator/validator.js","Redux/message-reducer.ts","api/users-api.ts","utils/obj-helper.js","Redux/findUsers-reducer.ts","components/content/Profile/Profile.module.css","components/content/Profile/ProfileDataForm/ChangePhoto/ChangePhoto.module.css","api/api.ts","components/content/Profile/ProfileDataForm/ChangeProfileInfo.module.css"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Header","props","className","style","header","loginOrLogout","isAuth","logout","login","onClick","onLogout","to","security","instance","get","response","data","authMe","email","password","rememberMe","captcha","post","initialState","userId","captchaUrl","actions","type","url","getAuthUserData","dispatch","a","resultCode","ResultCodes","Success","id","getCaptchaUrl","authReducer","state","action","HeaderContainer","this","React","Component","connect","auth","SideBar","container","sideBarElems","activeClassName","active","href","Contacts","contacts","socialNetworks","facebook","github","instagram","twitter","vk","website","youtube","mainLink","contactsField","Object","keys","map","key","contactElem","target","src","alt","ProfileData","profile","profileData","mainInfo","lookingForAJob","lookingForAJobDescription","aboutMe","ProfileInfo","avatar","photos","large","defaultPhoto","fullName","status","changeEditModButton","isOwner","onChangeEditMode","ChangePhoto","changePhotoButton","onChange","event","files","length","onUpdatePhoto","htmlFor","ChangeProfileInfo","initialValues","onSubmit","handleSubmit","avatarPhoto","fullNameAndStatus","fieldInfo","name","placeholder","component","Input","otherInfo","Textarea","saveButton","Profile","content","editMode","isFetching","profileAPI","put","file","formData","FormData","append","headers","getUserProfile","getStatus","updateStatus","updateProfileData","obj","objForStopSubmit","ResponseValidatorForUpdateProfileData","messages","Promise","reject","profileReducer","mapStateToPropsForRedirect","ProfileContainer","toggle","setState","match","params","authorizedUserId","getUserData","setStatus","updateUserData","refreshProfile","catch","prevProps","prevState","updatePhoto","onUpdateProfileData","onRefreshProfile","bind","onSubmitChangeProfileInfo","compose","profilePage","all","withRouter","RedirectComponent","undefined","LoginFormFormik","emailField","passwordField","rememberMeField","captchaField","captchaImage","summaryError","hasError","styleForReduxFormErrors","formSummaryError","submitButton","connectLogin","useState","setHasError","namePage","hasErrors","initialized","tryVPN","appReducer","rootReducer","combineReducers","messagePage","messageReducer","findUsersPage","findUsersReducer","app","store","createStore","composeWithDevTools","applyMiddleware","thunkMiddleware","withSuspense","fallback","FindUsersContainer","lazy","MessageContainer","App","initializeApp","setTimeout","setTryVPN","path","render","AppContainer","promise","SamuraiJsApp","ReactDOM","document","getElementById","FormControls","errors","form","error","children","field","module","exports","preloader","ValidateList","validators","values","func","checkForError","required","value","trim","maxLength","errorsArr","regularForContactsFields","RegExp","regularForOtherFields","test","replace","found","errorText","nameField","correctName","toLowerCase","charAt","slice","dialogNames","chat","message","addMessage","messageText","usersAPI","getUsers","size","page","follow","unFollow","delete","updateObjInArray","arr","itemSearchId","objPropName","newObjProps","item","users","pageSize","totalCounts","focusPage","followingInProgressUsers","requestUsers","currentPage","items","totalCount","followUnFollowFlow","APIRequest","actionCreator","followed","filter","ResultCodeForCapctha","axios","create","withCredentials","baseURL"],"mappings":"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","file":"static/js/main.eef26385.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport style from './header.module.css';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <div className={style.header}>\r\n            <div className={style.loginOrLogout}>\r\n                {props.isAuth\r\n                    ? <div className={style.logout}>\r\n                        <span>{props.login} - </span>\r\n                        <button onClick={props.onLogout}>logout</button>\r\n                     </div>\r\n                    : <div className={style.login}>\r\n                        <Link to={'/auth'}>Login</Link>\r\n                      </div>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header;","import {instance} from \"./api\";\r\n\r\ntype getCaptchaUrlResponseType = {\r\n    url: string\r\n}\r\n\r\nexport const security = {\r\n    getCaptchaUrl() {\r\n        return instance.get<getCaptchaUrlResponseType>(`security/get-captcha-url`)\r\n            .then((response: any) => {\r\n                return response.data;\r\n            });\r\n    }\r\n}","import {APIResponseType, instance, ResultCodeForCapctha, ResultCodes} from \"./api\";\r\n\r\ntype MeResponseType = {\r\n    id: number,\r\n    email: string,\r\n    login: string\r\n}\r\n\r\ntype LoginResponseDataType = {\r\n    userId: number\r\n}\r\n\r\nexport const authMe = {\r\n    me() {\r\n        return instance.get<APIResponseType<MeResponseType>>(`auth/me`)\r\n            .then((response) => {\r\n                return response.data;\r\n            });\r\n    },\r\n    login(email: string, password: string, rememberMe: boolean, captcha: string | null) {\r\n        return instance.post<APIResponseType<LoginResponseDataType, ResultCodes | ResultCodeForCapctha>>(`auth/login`, {email, password, rememberMe, captcha})\r\n            .then((response) => {\r\n                return response.data;\r\n            });\r\n    },\r\n    logout() {\r\n        return instance.post<APIResponseType>(`auth/logout`)\r\n            .then((response) => {\r\n                return response.data;\r\n            });\r\n    }\r\n};","import {ResultCodes} from '../api/api';\r\nimport {security} from '../api/security-api';\r\nimport {authMe} from \"../api/auth-api\";\r\nimport {ThunkAction} from \"redux-thunk\";\r\nimport {GlobalStateType, InferActionsTypes} from \"./store\";\r\n\r\nlet initialState = {\r\n    userId: null as null | number,\r\n    email: null as string | null,\r\n    login: null as string | null,\r\n    isAuth: false,\r\n    captchaUrl: null as string | null\r\n};\r\n\r\ntype initialStateType = typeof initialState;\r\ntype ActionsTypes = InferActionsTypes<typeof actions>;\r\n\r\nconst authReducer = (state = initialState, action: ActionsTypes): initialStateType => {\r\n    switch(action.type) {\r\n        case 'SN/AUTH-REDUCER/SET_USERS_DATA': {\r\n            return {\r\n                ...state,\r\n                ...action.data\r\n            }\r\n        }\r\n        case 'SN/AUTH-REDUCER/SET_CAPTCHA_URL': {\r\n            return {\r\n                ...state,\r\n                captchaUrl: action.url\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const actions = {\r\n    setUserData: (userId: number | null, email: string | null, login: string | null, isAuth: boolean) => ({type: 'SN/AUTH-REDUCER/SET_USERS_DATA', data: {userId, email, login, isAuth}} as const),\r\n    setCaptchaUrl: (url: string | null) => ({type: 'SN/AUTH-REDUCER/SET_CAPTCHA_URL', url} as const)\r\n}\r\n\r\ntype ThunkType = ThunkAction<Promise<any>, GlobalStateType, unknown, ActionsTypes> // FIX ANY\r\n\r\nexport const getAuthUserData = (): ThunkType => {\r\n    return async (dispatch) => {\r\n        const response = await authMe.me();\r\n        if(response.resultCode === ResultCodes.Success) {\r\n            const {id, email, login} = response.data;\r\n            dispatch(actions.setUserData(id, email, login, true));\r\n        }\r\n    }\r\n}\r\n\r\nexport const login = (email: string, password: string, rememberMe: boolean = false, captcha: string | null = null): ThunkType => {\r\n    return async (dispatch) => {\r\n        const response = await authMe.login(email, password, rememberMe, captcha);\r\n        if(response.resultCode === 0) {\r\n            dispatch(getAuthUserData());\r\n            dispatch(actions.setCaptchaUrl(null));\r\n        } else {\r\n            if(response.resultCode === 10) dispatch(getCaptchaUrl());\r\n            return response.messages.length > 0 ? response.messages[0] : 'some error';\r\n\r\n        }\r\n    }\r\n}\r\n\r\nexport const logout = (): ThunkType => {\r\n    return async (dispatch) => {\r\n        const response = await authMe.logout();\r\n        if(response.resultCode === 0) {\r\n            dispatch(actions.setUserData(null, null, null, false));\r\n        }\r\n    }\r\n}\r\n\r\nexport const getCaptchaUrl = (): ThunkType => {\r\n    return async (dispatch) => {\r\n        const response = await security.getCaptchaUrl();\r\n        dispatch(actions.setCaptchaUrl(response.url));\r\n    }\r\n}\r\n\r\nexport default authReducer;","import React from 'react';\r\nimport Header from \"./header\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n        logout,\r\n    } from \"../../Redux/auth-reducer\";\r\n\r\nclass HeaderContainer extends React.Component {\r\n    render() {\r\n        return <Header\r\n            onLogout={this.props.logout}\r\n            login={this.props.login}\r\n            isAuth={this.props.isAuth}\r\n        />\r\n    }\r\n}\r\nconst mapStateToProps = (state) => ({\r\n    login: state.auth.login,\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport default connect(mapStateToProps, {logout})(HeaderContainer);","import React from 'react';\r\nimport style from './side-bar.module.css';\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst SideBar = () => {\r\n    return (\r\n        <div className={style.container}>\r\n            <div className={style.sideBarElems}>\r\n                <NavLink activeClassName={style.active} to=\"/profile\">Profile</NavLink>\r\n            </div>\r\n            <div className={style.sideBarElems}>\r\n                <NavLink activeClassName={style.active} to=\"/message\">Messages</NavLink>\r\n            </div>\r\n            <div className={style.sideBarElems}>\r\n                <a href=\"#\">News</a>\r\n            </div>\r\n            <div className={style.sideBarElems}>\r\n                <a href=\"#\">Music</a>\r\n            </div>\r\n            <div className={style.sideBarElems}>\r\n                <NavLink activeClassName={style.active} to=\"/FindUsers\">Find users</NavLink>\r\n            </div>\r\n            <div className={style.sideBarElems}>\r\n                <a href=\"#\">Settings</a>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SideBar;","export default __webpack_public_path__ + \"static/media/facebook.2dd4dccb.svg\";","export default __webpack_public_path__ + \"static/media/github.e0df113a.svg\";","export default __webpack_public_path__ + \"static/media/instagram.c59b798d.svg\";","export default __webpack_public_path__ + \"static/media/twitter.88d497cc.svg\";","export default __webpack_public_path__ + \"static/media/vk.e9553eae.svg\";","export default __webpack_public_path__ + \"static/media/website.69464eb9.svg\";","export default __webpack_public_path__ + \"static/media/youtube.5213846a.svg\";","export default __webpack_public_path__ + \"static/media/mainLink.38fa11dd.svg\";","import React from 'react';\r\nimport style from './Contact.module.css';\r\n\r\nimport facebook from '../../../../../../assets/images/facebook.svg';\r\nimport github from '../../../../../../assets/images/github.svg';\r\nimport instagram from '../../../../../../assets/images/instagram.svg';\r\nimport twitter from '../../../../../../assets/images/twitter.svg';\r\nimport vk from '../../../../../../assets/images/vk.svg';\r\nimport website from '../../../../../../assets/images/website.svg'\r\nimport youtube from '../../../../../../assets/images/youtube.svg'\r\nimport mainLink from '../../../../../../assets/images/mainLink.svg'\r\n\r\n\r\nconst Contacts = ({contacts}) => {\r\n\r\n    const socialNetworks = {\r\n        facebook,\r\n        github,\r\n        instagram,\r\n        twitter,\r\n        vk,\r\n        website,\r\n        youtube,\r\n        mainLink\r\n    };\r\n\r\n\r\n    const contactsField = Object.keys(contacts).map(key => {\r\n        if(contacts[key] !== null && contacts[key] !== '') {\r\n            return (\r\n                <div className={style.contactElem} key={key}>\r\n                    <a href={contacts[key]} target='_blank'>\r\n                        <img src={socialNetworks[key]} alt={key} key={key}/>\r\n                    </a>\r\n                </div>\r\n            )\r\n        }\r\n    }); \r\n\r\n    return (\r\n        <div className={style.contacts}>\r\n            {contactsField}\r\n        </div>\r\n    )\r\n}\r\n\r\n//<b>Contacts: </b>{Object.keys(profile.contacts).map(key => {\r\n//    return <Contact key={key} contactTitle={key} contactValue={profile.contacts[key]}/>\r\nexport default Contacts;","import React from 'react';\r\nimport style from './ProfileData.module.css';\r\nimport Contacts from \"./Contacts/Contacts\";\r\n\r\nconst ProfileData = ({profile}) => {\r\n    return (\r\n        <div className={style.profileData}>\r\n            <div className={style.mainInfo}>\r\n                <b>looking for a job: </b><p>{profile.lookingForAJob ? 'yes' : 'no'}</p>\r\n            </div>\r\n            <div className={style.mainInfo}>\r\n                <b>looking for a job description: </b><p>{profile.lookingForAJobDescription}</p>\r\n            </div>\r\n            <div className={style.mainInfo}>\r\n                <b>about me: </b><p>{profile.aboutMe}</p>\r\n            </div>\r\n            <div className={style.contacts}>\r\n                <Contacts contacts={profile.contacts}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileData;","import React from 'react';\r\nimport style from './ProfileInfo.module.css';\r\nimport ProfileData from './ProfileData/ProfileData';\r\nimport defaultPhoto from '../../../../assets/images/defaultPhoto.svg';\r\n\r\nconst ProfileInfo = (props) => {\r\n    return (\r\n        <div className={style.profile}>\r\n            <div className={style.avatar}>\r\n                <div>\r\n                    <img src={props.profile.photos.large ? props.profile.photos.large : defaultPhoto} alt=\"avatar\"/>\r\n                </div>\r\n            </div>\r\n            <div className={style.profileData}>\r\n\r\n                <div className={style.fullName}>\r\n                    {props.profile.fullName}\r\n                </div>\r\n                <div className={style.status}>\r\n                    {props.status\r\n                     ? <p>{props.status}</p>\r\n                     : <p>-----</p>\r\n                    }\r\n                </div>\r\n                <div>\r\n                    <ProfileData\r\n                        profile={props.profile}\r\n                    />\r\n                </div>\r\n            </div>\r\n            <div className={style.changeEditModButton}>\r\n                {props.isOwner\r\n                    ? <button onClick={() => props.onChangeEditMode(true)}>change my profile</button>\r\n                    : null\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}   \r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport style from './ChangePhoto.module.css';\r\n\r\nconst ChangePhoto = (props) => {\r\n    const onChangePhoto = (event) => {\r\n        if(event.target.files.length) {\r\n            props.onUpdatePhoto(event.target.files[0]);\r\n        }\r\n    }\r\n    return (\r\n        <div className={style.changePhotoButton}>\r\n            <input type=\"file\" id='upload' onChange={onChangePhoto}/>\r\n            <label htmlFor='upload'>Upload photo</label>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChangePhoto;","import React from 'react';\r\nimport {Input, Textarea} from \"../../../common/FormControls/FormControls\";\r\nimport defaultPhoto from \"../../../../assets/images/defaultPhoto.svg\";\r\nimport style from './ChangeProfileInfo.module.css';\r\nimport ChangePhoto from \"./ChangePhoto/ChangePhoto\";\r\nimport {Field, Formik, Form} from \"formik\";\r\n\r\nconst ChangeProfileInfo = (props) => {\r\n    return (\r\n        <div className={style.profile}>\r\n            <Formik\r\n                initialValues={\r\n                    {\r\n                        ...props.initialValues,\r\n                        status: props.status\r\n                    }\r\n                }\r\n                onSubmit={props.onSubmit}\r\n            >\r\n                {({\r\n                      handleSubmit\r\n                  }) => (\r\n                    <Form onSubmit={handleSubmit}>\r\n                        <div className={style.container}>\r\n                            <div className={style.avatar}>\r\n                                <div className={style.avatarPhoto}>\r\n                                    <img src={props.profile.photos.large ? props.profile.photos.large : defaultPhoto}\r\n                                         alt=\"avatar\"/>\r\n                                </div>\r\n                                <div className={style.changePhotoButton}>\r\n                                    <ChangePhoto onUpdatePhoto={props.onUpdatePhoto}/>\r\n                                </div>\r\n                            </div>\r\n                            <div className={style.fullNameAndStatus}>\r\n                                <div className={style.fullName + ' ' + style.fieldInfo}>\r\n                                    <span>full name</span>\r\n                                    <Field name=\"fullName\" placeholder=\"full name\" component={Input}/>\r\n                                </div>\r\n                                <div className={style.status + ' ' + style.fieldInfo}>\r\n                                    <span>status</span>\r\n                                    <Field name=\"status\" placeholder=\"status\" component={Input}/>\r\n                                </div>\r\n                            </div>\r\n                            <div className={style.otherInfo}>\r\n                                <div className={style.fieldInfo}>\r\n                                    <span>about me</span>\r\n                                    <Field name=\"aboutMe\" placeholder=\"about me\" component={Textarea}/>\r\n                                </div>\r\n                                <div className={style.fieldInfo}>\r\n                                    <span>looking for a job</span>\r\n                                    <Field name=\"lookingForAJob\" type='checkbox' placeholder=\"status\" component={Input}/>\r\n                                </div>\r\n                                <div className={style.fieldInfo}>\r\n                                    <span>looking for a job description</span>\r\n                                    <Field name=\"lookingForAJobDescription\" placeholder=\"looking for a job description\" component={Textarea}/>\r\n                                </div>\r\n                                <div className={style.contacts}>\r\n                                      <div>\r\n                                        {Object.keys(props.profile.contacts).map(key => {\r\n                                            return (\r\n                                                <div key={key} className={style.fieldInfo}>\r\n                                                    <span>{key}: </span><Field name={`contacts.${key}`} placeholder={key} component={Input}/>\r\n                                                </div>\r\n                                            )\r\n                                        })}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className={style.saveButton}>\r\n                                <button type='submit'>Save</button>\r\n                            </div>\r\n                        </div>\r\n                    </Form>\r\n                )}\r\n            </Formik>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChangeProfileInfo;","import React from 'react';\r\nimport style from './Profile.module.css';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\nimport ChangeProfileInfo from \"./ProfileDataForm/ChangeProfileInfo\";\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div className={style.content}>\r\n            {props.editMode\r\n                ? <ChangeProfileInfo\r\n                    onUpdatePhoto={props.onUpdatePhoto}\r\n                    onSubmit={props.onSubmit}\r\n                    profile={props.profile}\r\n                    status={props.status}\r\n                    initialValues={props.profile}\r\n                  />\r\n                : <ProfileInfo\r\n                    onChangeEditMode={props.onChangeEditMode}\r\n                    profile={props.profile}\r\n                    status={props.status}\r\n                    isFetching={props.isFetching}\r\n                    isOwner={props.isOwner}\r\n                  />\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","import {APIResponseType, instance} from \"./api\";\r\nimport {PhotosType, profileType} from \"../types/types\";\r\n\r\ntype SavePhotoResponseDataType = {\r\n    photos: PhotosType\r\n}\r\n\r\nexport const profileAPI = {\r\n    getUserProfile(id: number) {\r\n        return instance.get<profileType>(`profile/${id}`)\r\n            .then((response) => {\r\n                return response.data;\r\n            });\r\n    },\r\n    getStatus(id: number) {\r\n        return instance.get<string>(`profile/status/${id}`)\r\n            .then((response) => {\r\n                return response.data;\r\n            });\r\n    },\r\n    updateStatus(status: string) {\r\n        return instance.put<APIResponseType>(`profile/status/`, {status})\r\n            .then((response) => {\r\n                return response.data;\r\n            });\r\n    },\r\n    updatePhoto(file: File) {\r\n        const formData = new FormData();\r\n        formData.append(\"image\", file);\r\n\r\n        return instance.put<APIResponseType<SavePhotoResponseDataType>>(`profile/photo`, formData, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        }).then((response) => {\r\n            return response.data;\r\n        });\r\n    },\r\n    updateProfileData(profile: profileType) {\r\n        return instance.put<APIResponseType>(`profile/`, profile)\r\n            .then((response) => {\r\n                return response.data;\r\n            });\r\n    }\r\n};","import {profileAPI} from '../api/profile-api';\r\nimport {ResponseValidatorForUpdateProfileData} from \"../utils/validator/validator\"\r\nimport {profileType, PhotosType} from '../types/types'\r\nimport {ThunkAction} from \"redux-thunk\";\r\nimport {GlobalStateType, InferActionsTypes} from \"./store\";\r\n\r\nlet initialState = {\r\n    profile: null as profileType | any,\r\n    status: null as null | string,\r\n    isFetching: false\r\n};\r\n\r\ntype initialStateType = typeof initialState;\r\ntype ActionsTypes = InferActionsTypes<typeof actions>;\r\n\r\nconst profileReducer = (state = initialState, action: ActionsTypes): initialStateType => {\r\n    switch(action.type) {\r\n        case 'SN/PROFILE-REDUCER/SET_PROFILE': {\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            };\r\n        }\r\n        case 'SN/PROFILE-REDUCER/SET_STATUS': {\r\n            return  {\r\n                ...state,\r\n                status: action.status\r\n            };\r\n        }\r\n        case 'SN/PROFILE-REDUCER/SAVE_PHOTO': {\r\n            return  {\r\n                ...state,\r\n                profile: {...state.profile, photos: action.photos}\r\n            }\r\n        }\r\n        case 'SN/PROFILE-REDUCER/TOGGLE_FETCHING': {\r\n            return  {\r\n                ...state,\r\n                isFetching: action.isFetching\r\n            }\r\n        }\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\nexport const actions = {\r\n    setProfile: (profile: profileType) => ({type: 'SN/PROFILE-REDUCER/SET_PROFILE', profile} as const),\r\n    setStatus: (status: string) => ({type: 'SN/PROFILE-REDUCER/SET_STATUS', status} as const),\r\n    saveLargeAndSmallPhotos: (photos: PhotosType) => ({type: 'SN/PROFILE-REDUCER/SAVE_PHOTO', photos} as const),\r\n    toggleFetching: (isFetching: boolean) => ({type: 'SN/PROFILE-REDUCER/TOGGLE_FETCHING', isFetching} as const)\r\n}\r\n\r\ntype ThunkType = ThunkAction<Promise<void>, GlobalStateType, unknown, ActionsTypes>\r\n\r\nexport const getUserData = (userId: number): ThunkType => {\r\n    return async (dispatch) => {\r\n        dispatch(actions.toggleFetching(true));\r\n        await Promise.all([dispatch(getUserProfile(userId)), dispatch(getStatus(userId))])\r\n        dispatch(actions.toggleFetching(false));\r\n    }\r\n}\r\n\r\nexport const getUserProfile = (userId: number): ThunkType => {\r\n    return async (dispatch) => {\r\n        let profile = await profileAPI.getUserProfile(userId);\r\n        dispatch(actions.setProfile(profile));\r\n    }\r\n}\r\n\r\nexport const getStatus = (userId: number): ThunkType => {\r\n    return async (dispatch) => {\r\n        let status = await profileAPI.getStatus(userId);\r\n        dispatch(actions.setStatus(status));\r\n    }\r\n}\r\n\r\nexport const updateUserData = (status: string, obj: profileType): ThunkType => {\r\n    return async (dispatch) => {\r\n        await Promise.all([dispatch(updateStatus(status)), dispatch(updateProfileData(obj))]);\r\n    }\r\n}\r\n\r\nexport const updateStatus = (status: string): ThunkType => {\r\n    return async (dispatch) => {\r\n        let response = await profileAPI.updateStatus(status);\r\n        if(response.resultCode === 0) {\r\n            dispatch(actions.setStatus(status));\r\n        }\r\n    }\r\n}\r\n\r\nexport const updateProfileData = (obj: profileType): ThunkType => {\r\n    return async (dispatch) => {\r\n        let response = await profileAPI.updateProfileData(obj);\r\n        if(response.resultCode !== 0) {\r\n            let objForStopSubmit = ResponseValidatorForUpdateProfileData(response.messages);\r\n            dispatch(actions.toggleFetching(false));\r\n            return Promise.reject(objForStopSubmit);\r\n        }\r\n    }\r\n}\r\n\r\nexport const updatePhoto = (file: any): ThunkType => {\r\n    return async (dispatch) => {\r\n        dispatch(actions.toggleFetching(true));\r\n        let response = await profileAPI.updatePhoto(file);\r\n        if(response.resultCode === 0) {\r\n            dispatch(actions.saveLargeAndSmallPhotos(response.data.photos));\r\n        }\r\n        dispatch(actions.toggleFetching(false));\r\n    }\r\n}\r\n\r\nexport default profileReducer;","import React from 'react';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\n\r\nconst mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n     class RedirectComponent extends React.Component {\r\n         render() {\r\n             //the second condition need so that redirect from profile was be only at owner\r\n             if(!this.props.isAuth && this.props.match.params.userId === undefined) return <Redirect to={'/auth'} />\r\n             return <Component {...this.props}/>\r\n         }\r\n     }\r\n\r\n     const connectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n     return connectedAuthRedirectComponent;\r\n}","import React from 'react';\r\nimport Profile from './Profile';\r\nimport {\r\n        getUserData,\r\n        updateUserData,\r\n        updatePhoto,\r\n    } from '../../../Redux/profile-reducer';\r\nimport {connect} from 'react-redux';\r\nimport {withRouter} from 'react-router-dom';\r\nimport {compose} from 'redux';\r\nimport {withAuthRedirect} from \"../../../hoc/withAuthRedirect\";\r\nimport Preloader from '../../common/Preloader/preloader';\r\n\r\nclass ProfileContainer extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            editMode: false\r\n        };\r\n    }\r\n\r\n    onChangeEditMode(toggle) {\r\n        this.setState({\r\n            editMode: toggle\r\n        });\r\n    }\r\n\r\n    refreshProfile() {\r\n        let id = this.props.match.params.userId;\r\n        if(!this.props.match.params.userId) id = this.props.authorizedUserId;\r\n        this.props.getUserData(id);\r\n    }\r\n\r\n    onSubmitChangeProfileInfo({status='', ...data}, {setStatus}) {\r\n         this.props.updateUserData(status, data)\r\n            .then(() => {\r\n                this.refreshProfile();\r\n                this.onChangeEditMode(false);\r\n            })\r\n            .catch((obj) => {\r\n                setStatus(obj);\r\n            })\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile();\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if(prevProps.match.params.userId !== this.props.match.params.userId) {\r\n            this.refreshProfile();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if(this.props.isFetching || !this.props.profile) {\r\n            return  <Preloader />\r\n        } else {\r\n            return <Profile\r\n                onUpdatePhoto={this.props.updatePhoto}\r\n                onUpdateProfileData={this.props.updateUserData}\r\n                onRefreshProfile={this.refreshProfile.bind(this)}\r\n                onChangeEditMode={this.onChangeEditMode.bind(this)}\r\n\r\n                onSubmit={this.onSubmitChangeProfileInfo.bind(this)}\r\n\r\n                editMode={this.state.editMode}\r\n                isOwner={!this.props.match.params.userId}\r\n                isFetching={this.props.isFetching}\r\n                profile={this.props.profile}\r\n                status={this.props.status}\r\n            />\r\n        }\r\n\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        profile: state.profilePage.profile,\r\n        status: state.profilePage.status,\r\n        isFetching: state.profilePage.isFetching,\r\n        authorizedUserId: state.auth.userId,\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {updateUserData, updatePhoto ,getUserData}),\r\n    withRouter,\r\n    withAuthRedirect\r\n)(ProfileContainer)","import React, {useState} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {login} from '../../../Redux/auth-reducer';\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\nimport {Formik, Field, Form} from 'formik';\r\nimport {Input} from '../../common/FormControls/FormControls';\r\nimport styleForReduxFormErrors from '../../common/FormControls/FormControls.module.css';\r\n\r\nimport style from './Login.module.css';\r\n\r\nconst LoginFormFormik = (props) => {\r\n    return (\r\n        <div>\r\n            <Formik\r\n                initialValues={{\r\n                    email: '',\r\n                    password: '',\r\n                    rememberMe: false,\r\n                    captcha: null\r\n                }}\r\n                onSubmit={props.onSubmit}\r\n            >\r\n                {({\r\n                      handleSubmit,\r\n                  }) => (\r\n                    <Form onSubmit={handleSubmit}>\r\n                        <div className={style.emailField}>\r\n                            <Field name=\"email\" placeholder=\"Email\" component={Input}/>\r\n                        </div>\r\n                        <div className={style.passwordField}>\r\n                            <Field name=\"password\" placeholder=\"Password\"  type=\"password\"component={Input}/>\r\n                        </div>\r\n                        <div className={style.rememberMeField}>\r\n                            <Field name=\"rememberMe\" placeholder=\"RememberMe\" type=\"checkbox\" component={Input}/>\r\n                            <span>rememberMe</span>\r\n                        </div>\r\n                        {props.captchaUrl &&\r\n                        <div className={style.captchaField}>\r\n                            <div className={style.captchaImage}>\r\n                                <img src={props.captchaUrl} alt=\"captchaImage\"/>\r\n                            </div>\r\n                            <Field name=\"captcha\" placeholder=\"Symbols from image\" component={Input}/>\r\n                        </div>\r\n                        }\r\n                        <div className={style.summaryError}>\r\n                            <span\r\n                                className={props.hasError ? styleForReduxFormErrors.formSummaryError : null}>\r\n                                {props.hasError ? props.hasError : ''}\r\n                            </span>\r\n                        </div>\r\n                        <div className={style.submitButton}>\r\n                            <button type=\"submit\">\r\n                                Send\r\n                            </button>\r\n                        </div>\r\n                    </Form>\r\n                )}\r\n            </Formik>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Login = ({login, isAuth, captchaUrl}) => {\r\n\r\n    const [hasError, setHasError] = useState(undefined);\r\n\r\n    const onSubmit = (formData) => {\r\n        const {email, password, rememberMe, captcha} = formData;\r\n        login(email, password, rememberMe, captcha)\r\n            .then((hasErrors) => {\r\n                if(hasErrors) {\r\n                    setHasError(hasErrors);\r\n                }\r\n            });\r\n    }\r\n\r\n    if(isAuth) {\r\n       return <Redirect to={'/profile'} />\r\n    }\r\n\r\n    return (\r\n        <div className={style.container}>\r\n            <h1 className={style.namePage}>Login</h1>\r\n            <LoginFormFormik\r\n                hasError={hasError}\r\n                onSubmit={onSubmit}\r\n                captchaUrl={captchaUrl}\r\n            />\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    captchaUrl: state.auth.captchaUrl\r\n});\r\n\r\nconst connectLogin = connect(mapStateToProps, {login})(Login);\r\n\r\nexport default connectLogin;","import { getAuthUserData } from \"./auth-reducer\";\nimport { ThunkAction } from \"redux-thunk\";\nimport { GlobalStateType, InferActionsTypes } from \"./store\";\n\nlet initialState = {\n  initialized: false,\n  tryVPN: false,\n};\n\ntype initialStateType = typeof initialState;\ntype ActionsTypes = InferActionsTypes<typeof actions>;\n\nconst appReducer = (\n  state = initialState,\n  action: ActionsTypes\n): initialStateType => {\n  switch (action.type) {\n    case \"SN/APP-REDUCER/INITIALIZED_SUCCESS\": {\n      return {\n        ...state,\n        initialized: true,\n      };\n    }\n    case \"SN/APP-REDUCER/SET_TRY_VPN\": {\n      return {\n        ...state,\n        tryVPN: true,\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport const actions = {\n  initializedSuccess: () =>\n    ({ type: \"SN/APP-REDUCER/INITIALIZED_SUCCESS\" } as const),\n  setTryVPN: () => ({ type: \"SN/APP-REDUCER/SET_TRY_VPN\" } as const),\n};\nexport const setTryVPN = () => ({\n  type: \"SN/APP-REDUCER/SET_TRY_VPN\",\n});\n\ntype ThunkType = ThunkAction<\n  Promise<void>,\n  GlobalStateType,\n  unknown,\n  ActionsTypes\n>;\n\nexport const initializeApp = (): ThunkType => {\n  return async (dispatch) => {\n    let promise = await dispatch(getAuthUserData());\n    Promise.all([promise]).then(() => {\n      dispatch(actions.initializedSuccess());\n    });\n  };\n};\n\nexport default appReducer;\n","import {createStore, combineReducers, applyMiddleware} from 'redux';\r\nimport profileReducer from './profile-reducer';\r\nimport messageReducer from './message-reducer';\r\nimport findUsersReducer from './findUsers-reducer';\r\nimport authReducer from './auth-reducer';\r\nimport appReducer from \"./app-reducer\";\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\n\r\nlet rootReducer = combineReducers({\r\n    profilePage: profileReducer,\r\n    messagePage: messageReducer,\r\n    findUsersPage: findUsersReducer,\r\n    auth: authReducer,\r\n    app: appReducer,\r\n});\r\n\r\nlet store  = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunkMiddleware)));\r\n\r\ntype PropertiesTypes<T> = T extends {[key: string]: infer U} ? U : never\r\nexport type InferActionsTypes<T extends {[key: string]: (...args: any[])=>any}> = ReturnType<PropertiesTypes<T>>\r\n\r\ntype RootReducerType = typeof rootReducer;\r\nexport type GlobalStateType = ReturnType<RootReducerType>;\r\n\r\nexport default store;","import React, {Suspense} from 'react';\r\nimport Preloader from '../components/common/Preloader/preloader';\r\n\r\nexport const withSuspense = (Component) => {\r\n    return (props) => {\r\n        return <Suspense fallback={<Preloader />}>\r\n            <Component {...props}/>\r\n        </Suspense>\r\n    };\r\n}","import React from \"react\";\nimport \"./App.css\";\nimport HeaderContainer from \"./components/header/headerContainer\";\nimport SideBar from \"./components/side-bar/side-bar\";\nimport ProfileContainer from \"./components/content/Profile/ProfileContainer\";\nimport Login from \"./components/content/Login/Login\";\nimport Preloader from \"./components/common/Preloader/preloader\";\nimport { HashRouter, Route } from \"react-router-dom\";\nimport { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { initializeApp, setTryVPN } from \"./Redux/app-reducer\";\nimport { compose } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport store from \"./Redux/store\";\nimport { withSuspense } from \"./hoc/withSuspense\";\n\nconst FindUsersContainer = React.lazy(() =>\n  import(\"./components/content/FindUsers/FindUsersContainer\")\n);\nconst MessageContainer = React.lazy(() =>\n  import(\"./components/content/Message/MessageContainer\")\n);\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.initializeApp();\n    setTimeout(() => {\n      if (!this.props.initialized) {\n        this.props.setTryVPN();\n      }\n    }, 1700);\n  }\n\n  render() {\n    if (!this.props.initialized) {\n      return <Preloader tryVPN={this.props.tryVPN} />;\n    }\n\n    return (\n      <div className=\"App\">\n        <div className=\"header\">\n          <HeaderContainer />\n        </div>\n        <div className=\"side\">\n          <SideBar />\n        </div>\n        <div className=\"content\">\n          <Route path=\"/profile/:userId?\" render={() => <ProfileContainer />} />\n          <Route path=\"/message\" render={withSuspense(MessageContainer)} />\n          <Route path=\"/FindUsers\" render={withSuspense(FindUsersContainer)} />\n          <Route path=\"/auth\" render={() => <Login />} />\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  initialized: state.app.initialized,\n  tryVPN: state.app.tryVPN,\n});\n\nlet AppContainer = compose(\n  connect(mapStateToProps, { initializeApp, setTryVPN })\n)(App);\n\nconst SamuraiJsApp = () => {\n  return (\n    <HashRouter>\n      <Provider store={store}>\n        <AppContainer />\n      </Provider>\n    </HashRouter>\n  );\n};\n\nexport default SamuraiJsApp;\n","import './index.css';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n    <App />,\r\n    document.getElementById('root')\r\n);\r\n\r\n\r\n\r\n\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","import style from './FormControls.module.css';\r\nimport React from \"react\";\r\n\r\nexport const FormControls = ({ name, errors, status = {},...props }) => {\r\n    return (\r\n        <div className={style.form + ' ' + ((errors[name] || status[name]) ? style.error : undefined)}>\r\n            <div>\r\n                {props.children}\r\n            </div>\r\n            <div>\r\n                <p>{errors[name]}</p>\r\n                <p>{status[name]}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea = ({ field, form, ...props }) => {\r\n    return <FormControls {...form} name={field.name}><textarea {...field} {...props}/></FormControls>\r\n}\r\n\r\nexport const Input = ({ field, form, ...props }) => {\r\n    return <FormControls {...form} name={field.name}><input {...field} {...props}/></FormControls>\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"side-bar_container__1CX7_\",\"sideBarElems\":\"side-bar_sideBarElems__Tr1nZ\",\"active\":\"side-bar_active__3Yis0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Login_container__328Vx\",\"namePage\":\"Login_namePage__8hE7C\",\"emailField\":\"Login_emailField__3V27O\",\"passwordField\":\"Login_passwordField__2ai-B\",\"captchaField\":\"Login_captchaField__3p1WK\",\"rememberMeField\":\"Login_rememberMeField__f_iw6\",\"submitButton\":\"Login_submitButton__2L81o\",\"captchaImage\":\"Login_captchaImage__1aT_0\",\"summaryError\":\"Login_summaryError__2r-6l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"ProfileInfo_profile__284dK\",\"avatar\":\"ProfileInfo_avatar__13TW4\",\"profileData\":\"ProfileInfo_profileData__rWcr1\",\"fullName\":\"ProfileInfo_fullName__3r99t\",\"status\":\"ProfileInfo_status__3xjFK\",\"changeEditModButton\":\"ProfileInfo_changeEditModButton__1140I\"};","export default __webpack_public_path__ + \"static/media/preloader.792448e7.svg\";","import React from \"react\";\nimport preloader from \"../../../assets/images/preloader.svg\";\nimport style from \"./preloader.module.css\";\n\nconst SideBar = ({ tryVPN = false }) => {\n  return (\n    <div className={style.preloader}>\n      <div className={style.tryVPN}>\n        <span className={tryVPN && style.active}>\n          You can try turn on VPN if you are in Ukraine!\n        </span>\n      </div>\n      <img src={preloader} alt=\"preloader\" />\n    </div>\n  );\n};\n\nexport default SideBar;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileData\":\"ProfileData_profileData__34oig\",\"mainInfo\":\"ProfileData_mainInfo__21IET\",\"contacts\":\"ProfileData_contacts__2UpxT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"FormControls_form__24Hao\",\"error\":\"FormControls_error__15y2q\",\"formSummaryError\":\"FormControls_formSummaryError__33cIe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"header_header__2hsn-\",\"loginOrLogout\":\"header_loginOrLogout__JVYMO\",\"logout\":\"header_logout__2t7NF\",\"login\":\"header_login__3NmrC\"};","export default __webpack_public_path__ + \"static/media/defaultPhoto.75fdf75c.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tryVPN\":\"preloader_tryVPN__1PJSO\",\"active\":\"preloader_active__3TjxF\",\"preloader\":\"preloader_preloader__3sBUQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contacts\":\"Contact_contacts__1ynur\",\"contactElem\":\"Contact_contactElem__30ClP\"};","export const ValidateList = validators => values => {\r\n    let errors = {};\r\n    for(const func of validators) {\r\n        for(let field in values) {\r\n            const checkForError = func(values[field]);\r\n            if(checkForError) {\r\n                errors[field] = checkForError;\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    return errors;\r\n}\r\n\r\nexport const required = value => {\r\n    if(value.trim() === '') return 'Field is required';\r\n}\r\n\r\nexport const maxLength = maxLength => (value) => {\r\n    if(value.length > maxLength) return `Max length is ${maxLength} symbol`;\r\n}\r\n\r\nexport const isEmail = value => {\r\n    if(/^([\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4})?$/.test(value)) return undefined;\r\n    return 'error email';\r\n}\r\n\r\nexport const ResponseValidatorForUpdateProfileData = errorsArr => {\r\n    let errors = {};\r\n\r\n    const regularForContactsFields = new RegExp(/^(.+)\\(Contacts->(.+)\\)/g);\r\n    const regularForOtherFields = new RegExp(/^The .+ (field .+)\\. \\((.+)\\)/g);\r\n\r\n    for(let error of errorsArr) {\r\n        if(regularForContactsFields.test(error)) {\r\n            error.replace(regularForContactsFields, (found, errorText, nameField) => {\r\n                let correctName = 'contacts.' + nameField.toLowerCase();\r\n                errors[correctName] = errorText;\r\n            });\r\n        } else {\r\n            error.replace(regularForOtherFields, (found, errorText, nameField) => {\r\n                let correctName = nameField.charAt(0).toLowerCase() + nameField.slice(1);\r\n                errors[correctName] = errorText;\r\n            });\r\n        }\r\n    }\r\n\r\n    return errors\r\n}\r\n\r\n\r\n\r\n","import {InferActionsTypes} from \"./store\";\r\n\r\ntype NameType = {\r\n    id: number,\r\n    name: string\r\n}\r\n\r\ntype MessageType = {\r\n    name: string,\r\n    message: string\r\n}\r\n\r\nlet initialState = {\r\n    dialogNames: [\r\n        {id: 1, name: 'Sergey'},\r\n        {id: 2, name: 'Katya'},\r\n        {id: 3, name: 'Eva'},\r\n        {id: 4, name: 'Milla'},\r\n        {id: 5, name: 'Masha'},\r\n        {id: 6, name: 'Vera'},\r\n        {id: 7, name: 'Andrusha'},\r\n        {id: 8, name: 'Petrysha'},\r\n        {id: 9, name: 'Bob'}\r\n    ] as Array<NameType>,\r\n    chat: [\r\n        {name: 'name', message: 'hi'},\r\n        {name: 'name', message: 'hi, i am the worst student'},\r\n    ] as Array<MessageType>,\r\n}\r\n\r\nexport type initialStateType = typeof initialState;\r\ntype ActionsTypes = InferActionsTypes<typeof actions>;\r\n\r\nconst messageReducer = (state = initialState, action: ActionsTypes): initialStateType => {\r\n    switch(action.type) {\r\n        case 'SN/MESSAGE/ADD_MESSAGE': {\r\n            return {\r\n                ...state,\r\n                chat: [...state.chat, {name: 'name', message: action.messageText}],\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const actions = {\r\n    addMessage: (messageText: string) => ({type: 'SN/MESSAGE/ADD_MESSAGE', messageText} as const)\r\n}\r\n\r\nexport default messageReducer;","import {APIResponseType, GetItemsType, instance} from \"./api\";\r\n\r\nexport const usersAPI = {\r\n    getUsers(size = 3, page = 1) {\r\n        return instance.get<GetItemsType>(`users?count=${size}&page=${page}`)\r\n            .then((response) => {\r\n                return response.data;\r\n            });\r\n    },\r\n    follow(id: number) {\r\n        return instance.post<APIResponseType>(`follow/${id}`)\r\n            .then((response) => {\r\n                return response.data;\r\n            });\r\n    },\r\n    unFollow(id: number) {\r\n        return instance.delete(`follow/${id}`)\r\n            .then((response) => {\r\n                return response.data;\r\n            }) as Promise<APIResponseType>;\r\n    },\r\n};","export let updateObjInArray = (arr, itemSearchId, objPropName, newObjProps) => {\r\n    return  arr.map (item => {\r\n        if(item[objPropName] === itemSearchId) {\r\n            return {...item, ...newObjProps};\r\n        }\r\n        return item;\r\n    })\r\n}\r\n","import {usersAPI} from '../api/users-api';\r\nimport {updateObjInArray} from \"../utils/obj-helper\";\r\nimport {userType} from '../types/types';\r\nimport {Dispatch} from \"redux\";\r\nimport {ThunkAction} from \"redux-thunk\";\r\nimport {GlobalStateType, InferActionsTypes} from \"./store\";\r\n\r\nlet initialState = {\r\n    users: [] as Array<userType>,\r\n    pageSize: 3,\r\n    totalCounts: 0,\r\n    focusPage: 1,\r\n    isFetching: false,\r\n    followingInProgressUsers: [] as Array<number>,\r\n};\r\n\r\ntype initialStateType = typeof initialState;\r\ntype ActionsTypes = InferActionsTypes<typeof actions>;\r\n\r\nconst findUsersReducer = (state = initialState, action: ActionsTypes): initialStateType => {\r\n    switch(action.type) {\r\n        case 'SN/FINDUSERS-REDUCER/SET_USERS': {\r\n            return {...state, users: [...action.users]}      \r\n        } \r\n        case 'SN/FINDUSERS-REDUCER/SET_PAGE': {\r\n            return {\r\n                ...state,\r\n                focusPage: action.page\r\n            }\r\n        }   \r\n        case 'SN/FINDUSERS-REDUCER/SET_TOTAL_COUNTS': {\r\n            return {\r\n                ...state,\r\n                totalCounts: action.totalCounts\r\n            }\r\n        }\r\n        case 'SN/FINDUSERS-REDUCER/FOLLOW': {\r\n            return {\r\n                ...state,\r\n                users: updateObjInArray(state.users, action.id, 'id', {followed: true})\r\n            };\r\n        }           \r\n        case 'SN/FINDUSERS-REDUCER/UNFOLLOW': {\r\n            return {\r\n                ...state,\r\n                users: updateObjInArray(state.users, action.id, 'id', {followed: false})\r\n            }\r\n        } \r\n        case 'SN/FINDUSERS-REDUCER/TOGGLE_IS_FETCHING': {\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching\r\n            }\r\n        }\r\n        case 'SN/FINDUSERS-REDUCER/TOGGLE_FOLLOWING_IN_PROGRESS': {\r\n            return  {\r\n                ...state,\r\n                followingInProgressUsers: action.isFetching\r\n                ? [...state.followingInProgressUsers, action.id]\r\n                : state.followingInProgressUsers.filter(id => id !== action.id)\r\n            }\r\n        }\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\nconst actions = {\r\n    setUsers: (users: Array<userType>) => ({type: 'SN/FINDUSERS-REDUCER/SET_USERS', users} as const),\r\n    followSucces: (id: number) => ({type: 'SN/FINDUSERS-REDUCER/FOLLOW', id} as const),\r\n    unFollowSucces: (id: number) => ({type: 'SN/FINDUSERS-REDUCER/UNFOLLOW', id} as const),\r\n    setPage: (page: number) => ({type: 'SN/FINDUSERS-REDUCER/SET_PAGE', page} as const),\r\n    setTotalCounts: (totalCounts: number) => ({type: 'SN/FINDUSERS-REDUCER/SET_TOTAL_COUNTS', totalCounts} as const),\r\n    toggleFetching: (isFetching: boolean) => ({type: 'SN/FINDUSERS-REDUCER/TOGGLE_IS_FETCHING', isFetching} as const),\r\n    toggleFollowingInProgress: (id: number, isFetching: boolean) => ({type: 'SN/FINDUSERS-REDUCER/TOGGLE_FOLLOWING_IN_PROGRESS', id, isFetching} as const)\r\n}\r\n\r\ntype DispatchType = Dispatch<ActionsTypes>\r\ntype ThunkType = ThunkAction<Promise<void>, GlobalStateType, unknown, ActionsTypes>\r\n\r\nexport const requestUsers = (pageSize: number, currentPage: number = 1): ThunkType => {\r\n    return async (dispatch) => {\r\n        dispatch(actions.toggleFetching(true));\r\n        let data = await usersAPI.getUsers(pageSize, currentPage);\r\n        dispatch(actions.toggleFetching(false));\r\n        dispatch(actions.setUsers(data.items));\r\n        dispatch(actions.setTotalCounts(data.totalCount));\r\n        dispatch(actions.setPage(currentPage));\r\n    }\r\n}\r\n\r\nconst followUnFollowFlow = async (dispatch: DispatchType, id: number, APIRequest: any, actionCreator: (id: number) => ActionsTypes) => {\r\n    dispatch(actions.toggleFollowingInProgress(id, true));\r\n    let data = await APIRequest(id);\r\n    if(data.resultCode === 0) {\r\n        dispatch(actions.toggleFollowingInProgress(id, false));\r\n        dispatch(actionCreator(id));\r\n    }\r\n}\r\n\r\nexport const follow = (id: number): ThunkType => {\r\n     return async (dispatch) => {\r\n        dispatch(actions.toggleFollowingInProgress(id, true));\r\n        followUnFollowFlow(dispatch, id, usersAPI.follow.bind(usersAPI), actions.followSucces);\r\n    }\r\n}\r\n\r\nexport const unFollow = (id: number): ThunkType => {\r\n     return async (dispatch) => {\r\n        dispatch(actions.toggleFollowingInProgress(id, true));\r\n        followUnFollowFlow(dispatch, id, usersAPI.unFollow.bind(usersAPI), actions.unFollowSucces);\r\n    }\r\n}\r\n\r\nexport default findUsersReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Profile_content__2U74S\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"changePhotoButton\":\"ChangePhoto_changePhotoButton__2imxv\"};","import axios from 'axios';\r\nimport {userType} from \"../types/types\";\r\n\r\nexport const instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        'API-KEY': '718bf453-524a-48b2-8e84-c21eb40e723c'\r\n    }\r\n});\r\n\r\nexport enum ResultCodes {\r\n    Success = 0,\r\n    Error = 1\r\n}\r\n\r\nexport enum ResultCodeForCapctha {\r\n    CaptchaIsRequired = 10\r\n}\r\n\r\nexport type GetItemsType = {\r\n    items: Array<userType>,\r\n    totalCount: number,\r\n    error: null | string\r\n}\r\n\r\nexport type APIResponseType<D = {}, RC = ResultCodes> = {\r\n    data: D,\r\n    messages: Array<string>,\r\n    resultCode: RC\r\n}\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"ChangeProfileInfo_profile__1MRgx\",\"container\":\"ChangeProfileInfo_container__1XTmY\",\"avatar\":\"ChangeProfileInfo_avatar__2H_aE\",\"avatarPhoto\":\"ChangeProfileInfo_avatarPhoto__1NhcM\",\"fullNameAndStatus\":\"ChangeProfileInfo_fullNameAndStatus__1acjU\",\"fullName\":\"ChangeProfileInfo_fullName__2Yh1y\",\"status\":\"ChangeProfileInfo_status__1fC_A\",\"otherInfo\":\"ChangeProfileInfo_otherInfo__1ZwHq\",\"contacts\":\"ChangeProfileInfo_contacts__TfUrS\",\"saveButton\":\"ChangeProfileInfo_saveButton__3cjpu\",\"fieldInfo\":\"ChangeProfileInfo_fieldInfo__JiJss\",\"changePhotoButton\":\"ChangeProfileInfo_changePhotoButton__i61lE\"};"],"sourceRoot":""}